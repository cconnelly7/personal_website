{"ast":null,"code":"var _jsxFileName = \"/Users/Chianne/Desktop/personal-website/src/app/CompGraphics.js\";\nimport React from 'react';\nimport './Project.css';\nimport $ from 'jquery';\n$(function () {\n  var shrinkHeader = 200;\n  $(window).scroll(function () {\n    var scroll = getCurrentScroll();\n\n    if (scroll >= shrinkHeader) {\n      $('.projPic').addClass('shrink');\n    } else {\n      $('.projPic').removeClass('shrink');\n    }\n  });\n\n  function getCurrentScroll() {\n    return window.pageYOffset || document.documentElement.scrollTop;\n  }\n});\n$(document).ready(function () {});\n\nclass ScrollToTopOnMount extends React.Component {\n  componentDidMount() {\n    window.scrollTo(0, 0);\n  }\n\n  render() {\n    return null;\n  }\n\n}\n\nfunction CompGraphics() {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(ScrollToTopOnMount, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    class: \"projPic\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    class: \"projHeader\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Computer Graphics Series\")), React.createElement(\"div\", {\n    class: \"projBg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"projContent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    class: \"banner\",\n    src: \"./Projects/ComputerGraphics/WalkerBanner.png\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(\"h4\", {\n    class: \"sectionHeader\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Overview\"), React.createElement(\"p\", {\n    class: \"feats\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \" In this series I applied concepts and algorithms to create, analyze, display, and animate shapes and structures and let the user design or control them interactively.\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    class: \"feats\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"The series began by implementing  a cubic Neville and a Bezier curve and applying an animation of dots moving along the curve with uniform, centripetal, and chordal knot spacing. The next feature I implemented was a circular arc implementation to visualize a Bezier curve rather than using a linear interpolation. If the user presses \\u201Ce,\\u201D they can toggle the line segments used in finding the radius and center coordinates. I then created a way to visualize how the Bezier curve gets constructed through the underlying liner interpolation function. It shows how the Bezier curve is a series of straight lines rather than a smooth curve. Also shown by this view are the intermediate curves created by the Bezier curve between ABC and BCD. These curves get combined to create the final Bezier curve.\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    class: \"imgContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    class: \"image2\",\n    src: \"./Projects/ComputerGraphics/cg0.png\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    class: \"image2\",\n    src: \"./Projects/ComputerGraphics/cg1.png\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    class: \"image2\",\n    src: \"./Projects/ComputerGraphics/cg2.png\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    class: \"image2\",\n    src: \"./Projects/ComputerGraphics/cg3.png\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    class: \"feats\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"In the next part of this series, I created a runner that followed a path that could be manipulated by the user. I first found the acceleration vector between the subdivision points of some control points. Next, I used the acceleration vectors to generate a curve along the floor. I used this as my footpath. To make the feet move, I counted the frames and moved the feet in cycles of 18 frames. I made legs with knees and calculated the knee points by using the foot location, forward direction, and hip location. I added a multiplier to the knee to vary how much it bends while it is moving. This was just to make it prettier. I added hips that tilt based on the cross product of the acceleration vector and forward direction. I used a similar method to calculate the shoulders, as well as to add bending arms. The feet move up and down as the runner is taking steps.\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    class: \"image1\",\n    src: \"./Projects/ComputerGraphics/walker.gif\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    class: \"feats\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"To finish off the series I explored applications of triangle meshes to collision avoidance, path planning, visibility analysis, and ray tracing. To begin, I first got the Robot and the pillars to appear. I then made a RobotTarget point. This started off as the same point as the Robot. When the Robot reaches the RobotTarget a new center point is chosen to be the new RobotTarget. As the Robot moves I change its height and radius such that the Robot maintains the same volume while traversing through the pillars. In the next step, I made the Robot \\u201Cclean the floor\\u201D by writing an algorithm that makes sure the Robot travels to all of the triangles within the mesh. In this algorithm, the distances to all of the circumcenters were checked and the Robot chose the closest uncleaned circumcenter as its new RobotTarget.\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    class: \"imgContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    class: \"image3\",\n    src: \"./Projects/ComputerGraphics/cg.3.0.gif\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    class: \"image3\",\n    src: \"./Projects/ComputerGraphics/cg.3.1.gif\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  })), React.createElement(\"h4\", {\n    class: \"sectionHeader\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Features/Tech Used\"), React.createElement(\"p\", {\n    class: \"feats\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Programming and graphics were done in \", React.createElement(\"div\", {\n    className: \"emphasize\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Processing\"), \", an open-source graphical library and IDE. Graphics interfaces such as \", React.createElement(\"div\", {\n    className: \"emphasize\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"OpenGL \"), \"and \", React.createElement(\"div\", {\n    className: \"emphasize\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"shaders\"), \" were used.\"), React.createElement(\"div\", {\n    class: \"extraSpace\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }))));\n}\n\nexport default CompGraphics;","map":{"version":3,"sources":["/Users/Chianne/Desktop/personal-website/src/app/CompGraphics.js"],"names":["React","$","shrinkHeader","window","scroll","getCurrentScroll","addClass","removeClass","pageYOffset","document","documentElement","scrollTop","ready","ScrollToTopOnMount","Component","componentDidMount","scrollTo","render","CompGraphics"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Project.css';\nimport $ from 'jquery';\n\n$(function(){\n  var shrinkHeader = 200;\n   $(window).scroll(function() {\n     var scroll = getCurrentScroll();\n       if ( scroll >= shrinkHeader ) {\n            $('.projPic').addClass('shrink');\n         }\n         else {\n            $('.projPic').removeClass('shrink');       \n         }\n   });\n function getCurrentScroll() {\n     return window.pageYOffset || document.documentElement.scrollTop;\n     }\n});\n \n $(document).ready(function(){ })\n\n\nclass ScrollToTopOnMount extends React.Component {\n  componentDidMount() {\n    window.scrollTo(0, 0);\n  }\n\n  render() {\n    return null;\n  }\n}\n \n \n\nfunction CompGraphics() {\n    return(\n      <div>\n        <ScrollToTopOnMount />\n        <div class=\"projPic\">\n          <h4 class='projHeader'>Computer Graphics Series</h4>\n        </div>\n        <div class=\"projBg\">\n          <div class=\"projContent\">\n            <img class=\"banner\" src=\"./Projects/ComputerGraphics/WalkerBanner.png\"></img>\n            <h4 class='sectionHeader'>Overview</h4>\n            <p class='feats'> In this series I applied concepts and algorithms to create, analyze, display, and animate shapes and structures and let the user design or control them interactively.</p>\n            <br/>\n            <br/>\n            <p class='feats'>The series began by implementing  a cubic Neville and a Bezier curve and applying an animation of dots moving along the curve with uniform, centripetal, and chordal knot spacing.\n               The next feature I implemented was a circular arc implementation to visualize a Bezier curve rather than using a linear interpolation. If the user presses “e,” they can toggle the line segments used in finding\n                  the radius and center coordinates. I then created a way to visualize how the Bezier curve gets constructed through the underlying liner interpolation function. It shows how the Bezier curve is a series of straight\n             lines rather than a smooth curve. Also shown by this view are the intermediate curves created by the Bezier curve between ABC and BCD. These curves get combined to create the final Bezier curve.\n            </p>\n            <br/>\n            <br/>\n            <div class=\"imgContainer\">\n              <img class=\"image2\" src=\"./Projects/ComputerGraphics/cg0.png\"></img>\n              <img class=\"image2\" src=\"./Projects/ComputerGraphics/cg1.png\"></img>\n              <img class=\"image2\" src=\"./Projects/ComputerGraphics/cg2.png\"></img>\n              <img class=\"image2\" src=\"./Projects/ComputerGraphics/cg3.png\"></img>\n            </div>\n            <br/>\n            <br/>\n            <p class='feats'>\n            In the next part of this series, I created a runner that followed a path that could be manipulated by the user. I first found the acceleration vector between the subdivision points\n             of some control points. Next, I used the acceleration vectors to generate a curve along the floor. I used this as my footpath. To make the feet move, I counted the frames and moved the\n              feet in cycles of 18 frames. I made legs with knees and calculated the knee points by using the foot location, forward direction, and hip location. I added a multiplier to the knee\n               to vary how much it bends while it is moving. This was just to make it prettier. I added hips that tilt based on the cross product of the acceleration vector and forward direction.\n                I used a similar method to calculate the shoulders, as well as to add bending arms. The feet move up and down as the runner is taking steps.\n            </p>\n            <br/>\n            <br/>\n            <img class=\"image1\" src=\"./Projects/ComputerGraphics/walker.gif\"></img>\n            <br/>\n            <br/>\n            <p class='feats'>\n            To finish off the series I explored applications of triangle meshes to collision avoidance, path planning, visibility analysis, and ray tracing. To begin, I first got the Robot and the\n             pillars to appear. I then made a RobotTarget point. This started off as the same point as the Robot. When the Robot reaches the RobotTarget a new center point is chosen to be the new\n              RobotTarget. As the Robot moves I change its height and radius such that the Robot maintains the same volume while traversing through the pillars. In the next step, I made the Robot\n               “clean the floor” by writing an algorithm that makes sure the Robot travels to all of the triangles within the mesh. In this algorithm, the distances to all of the circumcenters were\n                checked and the Robot chose the closest uncleaned circumcenter as its new RobotTarget.\n            </p>\n            <br/>\n            <br/>\n            <div class=\"imgContainer\">\n              <img class=\"image3\" src=\"./Projects/ComputerGraphics/cg.3.0.gif\"></img>\n              <img class=\"image3\" src=\"./Projects/ComputerGraphics/cg.3.1.gif\"></img>\n            </div>\n            <h4 class='sectionHeader'>Features/Tech Used</h4>\n            <p class='feats'>Programming and graphics were done in <div className='emphasize'>Processing</div>, an open-source graphical library and IDE. Graphics interfaces such as <div className='emphasize'>OpenGL </div> \n            and <div className='emphasize'>shaders</div> were used.\n            </p>\n            <div class='extraSpace'></div>\n          </div>\n        </div>\n      </div>\n    )\n}\n\nexport default CompGraphics;"]},"metadata":{},"sourceType":"module"}